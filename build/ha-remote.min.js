/*! ha-remote 2016-05-17 */
"use strict";function callService(a,b,c,d){var e=buildOptionsBase();e.method="POST",e.url=haURL+"/api/services/"+a+"/"+b,e.body=c,request(e,function(e,f,g){return e?(logger.error("Call to HA API Server failed",e),d(500)):200!=f.statusCode?(logger.error("Call to service %s/%s with service data %s failed, statuscode: %s",a,b,JSON.stringify(c),f.statusCode),d(f.statusCode,{haStatusCode:f.statusCode,haStatusMessage:f.StatusMessage})):d(e,g)})}function getDeviceState(a,b){var c=buildOptionsBase();c.method="GET",c.url=haURL+"/api/states/"+a,request(c,function(c,d,e){return c?(logger.error("Call to HA API Server failed",c),b(500)):200!=d.statusCode?(logger.error("Call to get state for entity_id %s failed, statuscode: %s",a,d.statusCode),b(d.statusCode,{haStatusCode:d.statusCode,haStatusMessage:d.StatusMessage})):b(c,e)})}function buildOptionsBase(){return{headers:{"X-HA-Access":haPassword},strictSSL:!1,json:!0}}function readDepencyInfos(a){var b=loadPackageJson(a.concat("/package.json")),c=[];for(var d in b.dependencies)c.push(readPackageInfo(a.concat("/node_modules/").concat(d).concat("/package.json")));return c}function readPackageInfo(a){var b=loadPackageJson(a);return{name:b.name,version:b.version}}function loadPackageJson(a){var b;try{b=JSON.parse(fs.readFileSync(a,"utf8")),logger.debug("Loading package info from [%s]",fs.realpathSync(a))}catch(c){throw logger.error("Failed to load package info from file [%s]",a),logger.error(c),c}return b}function computeToken(a,b,c){var d={password:a,hostname:b};return(new Hashes.MD5).hex_hmac(c,JSON.stringify(d)).toUpperCase()}function getConfigData(){if(configData)return configData;try{configData=JSON.parse(jsmin.jsmin(fs.readFileSync(module.exports.configFileName,"utf8"))),logger.info("Loading controller configuration from [%s]",fs.realpathSync(module.exports.configFileName))}catch(a){throw logger.error("Failed to load configuration from file [%s]",module.exports.configFileName),logger.error(a),a}return configData}!function(){angular.module("ha-remote.about",["ha-remote.translations"])}(),function(){function a(a,b,c){var d=this;a.load().then(function(a){d.copyrightYear=a.copyrightYear,d.copyrightHolders=a.copyrightHolders,d.version=a.version,d.packageInfos=a.modules},function(a){})}angular.module("ha-remote.about").controller("AboutController",["aboutService","$log","$translate",a])}(),function(){angular.module("ha-remote.about").directive("aboutWidget",[function(){return{templateUrl:"src/about/views/about.html",restrict:"E"}}])}(),function(){function a(a,b,c){return{load:function(){return b.get("/api").then(function(a){return c.debug("Fetched about info from server"),a.data},function(b){return c.info("Call to "+b.config.url+" failed with status "+b.status),a.reject(b.data)})}}}angular.module("ha-remote.about").service("aboutService",["$q","$http","$log",a])}(),function(){function a(a,b,c,d,e){function f(){b("left").toggle()}function g(b){"logout"==b?(a.logout(),i.selected="login"):i.selected=b}function h(){c.debug("Password submitted: %s",i.password),i.loginDisabled=!0,i.loginDisabled=!1,a.login(i.password).then(function(){c.debug("Sucessfull login"),i.password="",i.loginDisabled=!1,i.loginFailed=!1,i.select("panel")},function(a){c.debug("Login failed"),i.password="",i.loginFailed=!0,i.loginDisabled=!1})}var i=this;a.isAuthenticated()?i.selected="panel":i.selected="login",i.toggleMenu=f,i.select=g,i.password="",i.submitPassword=h,i.loginDisabled=!1,i.loginFailed=!1,e.$on("authnFailed",function(){c.debug("Received authnFailed event"),i.selected="login"})}angular.module("ha-remote").controller("AppController",["authnService","$mdSidenav","$log","$translate","$scope",a])}(),function(){angular.module("ha-remote",["ngMaterial","ha-remote.panel","ha-remote.translations","ha-remote.authn","ha-remote.about"]),angular.module("ha-remote").config(function(a,b){b.defaultIconSet("./assets/svg/mdi.svg").icon("menu","./assets/svg/menu.svg",24).icon("power-on","./assets/svg/power-on.svg",24).icon("power-off","./assets/svg/power-off.svg",24).icon("logo","./assets/svg/remote-control.svg",12),a.theme("default").primaryPalette("blue").accentPalette("red")})}(),function(){function a(a,b,c){return{load:function(){return b.get("/api/config").then(function(a){return c.debug("Fetched configuration from server"),a.data},function(b){return c.info("Call to "+b.config.url+" failed with status "+b.status),a.reject(b.data)})}}}angular.module("ha-remote.panel").service("configService",["$q","$http","$log",a])}(),function(){function a(a,b,c,d,e){function f(c){b.debug("Power on for id: "+c.id+" clicked."),i(),a.powerOn(c.id).then(function(){l.showProgress=!1,d("POWER_ON_SUCCESS",{control_caption:c.caption}).then(function(a){k(a)}),h(),j()},function(){l.showProgress=!1,d("POWER_ON_FAILURE",{control_caption:c.caption}).then(function(a){k(a)}),h(),j()})}function g(c){b.debug("Power off for id: "+c.id+" clicked."),i(),a.powerOff(c.id).then(function(){d("POWER_OFF_SUCCESS",{control_caption:c.caption}).then(function(a){k(a)}),h(),j()},function(){d("POWER_OFF_FAILURE",{control_caption:c.caption}).then(function(a){k(a)}),h(),j()})}function h(){a.getState(l.control.id).then(function(a){switch(a.state){case"on":l.state="state-on";break;case"off":l.state="state-off";break;default:l.state="state-unknown"}b.debug("Set device state of device %s to %s",l.control.caption,l.state)},function(){l.state="unknown",b.debug("Could not get state of device %s setting it to %s",l.control.caption,l.state)})}function i(){e.$emit("showProgress"),b.debug("Emitted showProgress")}function j(){e.$emit("hideProgress"),b.debug("Emitted hideProgress")}function k(a){c.show(c.simple().textContent(a))}var l=this;l.control=e.$parent.control,l.powerOn=f,l.powerOff=g,l.state="state-unknown",h(),e.$on("updateState",h)}angular.module("ha-remote.panel").controller("ControlController",["powerControlService","$log","$mdToast","$translate","$scope",a])}(),function(){angular.module("ha-remote.panel").directive("controlWidget",[function(){return{templateUrl:"src/panel/views/control.html",restrict:"AE",scope:{control:"="}}}])}(),function(){angular.module("ha-remote.panel",["ha-remote.translations","window-events"])}(),function(){function a(a,c,d,e,f,g){function h(){d.debug("Power off all clicked."),k(),results=new b(q.controls.length),q.controls.forEach(function(a){c.powerOff(a.id).then(function(){results.addSucess(a),o(results)},function(){results.addFailure(a),o(results)})})}function i(){d.debug("Power on all clicked."),k(),results=new b(q.controls.length),q.controls.forEach(function(a){c.powerOn(a.id).then(function(){results.addSucess(a),p(results)},function(){results.addFailure(a),p(results)})})}function j(){d.debug("PanelController#onWindowFocus"),m()}function k(){g.$emit("showProgress"),d.debug("Emitted showProgress")}function l(){g.$emit("hideProgress"),d.debug("Emitted hideProgress")}function m(){d.debug("PanelController#initUpdateState"),g.$broadcast("updateState")}function n(a){e.show(e.simple().textContent(a))}function o(a){a.isComplete()&&(l(),0==a.failCount()?(f("POWER_OFF_ALL_SUCCESS").then(function(a){n(a)}),m()):(f("POWER_OFF_ALL_FAILURE").then(function(a){n(a)}),m()))}function p(a){a.isComplete()&&(l(),0==a.failCount()?(f("POWER_ON_ALL_SUCCESS").then(function(a){n(a)}),m()):(f("POWER_ON_ALL_FAILURE").then(function(a){n(a)}),m()))}var q=this;q.controls=[],q.showControls=!1,q.showProgress=!0,q.powerOffAll=h,q.powerOnAll=i,q.onWindowFocus=j,a.load().then(function(a){q.controls=a,q.showProgress=!1,q.showControls=!0},function(a){q.showProgress=!1,q.showControls=!1,f("CONFIG_LOAD_FAILED").then(function(a){n(a)})});var r=0;g.$on("showProgress",function(){q.showProgress=!0,r++}),g.$on("hideProgress",function(){r--,0>r&&(r=0),0==r&&(q.showProgress=!1)})}function b(a){this.controlCount=a,this.sucessed=[],this.failed=[]}angular.module("ha-remote.panel").controller("PanelController",["configService","powerControlService","$log","$mdToast","$translate","$scope",a]),b.prototype.isComplete=function(){return this.sucessed.length+this.failed.length>=this.controlCount},b.prototype.failCount=function(){return this.failed.length},b.prototype.sucessCount=function(){return this.sucessed.length},b.prototype.addSucess=function(a){this.sucessed.push(a)},b.prototype.addFailure=function(a){this.failed.push(a)}}(),function(){angular.module("ha-remote.panel").directive("panelWidget",[function(){return{templateUrl:"src/panel/views/panel.html",restrict:"AE"}}])}(),function(){function a(a,b,c){return{powerOn:function(d){return b.post("/api/controls/"+d+"/poweron").then(function(a){return c.debug("Called powerOn API for control id:"+d),a.data},function(b){return c.info("Call to "+b.config.url+" failed with status "+b.status),a.reject(b.data)})},powerOff:function(d){return b.post("/api/controls/"+d+"/poweroff").then(function(a){return c.debug("Called powerOff API for control id:"+d),a.data},function(b){return c.info("Call to "+b.config.url+" failed with status "+b.status),a.reject(b.data)})},getState:function(d){return b.get("/api/controls/"+d).then(function(a){return c.debug("Called getState API for control id:"+d),a.data},function(b){return c.info("Call to "+b.config.url+" failed with status "+b.status),a.reject(b.data)})}}}angular.module("ha-remote.panel").service("powerControlService",["$q","$http","$log",a])}(),function(){angular.module("ha-remote.authn").factory("Intercept401",["$log","$q","$rootScope",function(a,b,c){return{responseError:function(d){a.debug("Intercepted response error");var e=b.defer();return 401==d.status&&(c.$broadcast("authnFailed"),a.debug("Broadcasted authnFailed event")),e.reject(d),e.promise}}}]),angular.module("ha-remote.authn").config(["$httpProvider",function(a){a.interceptors.push("Intercept401")}])}(),function(){angular.module("ha-remote.authn",["LocalStorageModule"]),angular.module("ha-remote.authn").config(["localStorageServiceProvider",function(a){a.setPrefix("HARemote").setStorageType("localStorage").setNotify(!0,!0)}])}(),function(){function a(a,b,c,d){function e(b){a.set("AuthToken",b),c.defaults.headers.common.Authorization="Bearer: ".concat(b),d.debug("New token stored")}function f(){a.remove("AuthToken"),d.debug("Token removed")}return{login:function(a){return c.post("/api/authn",{password:a}).then(function(a){d.debug("Sucessfully logged in"),e(a.data.token)},function(a){return 401==a.status?(d.info("Login attempted with invalid credentials"),f(),b.reject(401)):(d.info("Call to "+a.config.url+" failed with status "+a.status),b.reject(a.data))})},logout:function(){f()},isAuthenticated:function(){var b=a.get("AuthToken");return b?(c.defaults.headers.common.Authorization=b,!0):!1}}}angular.module("ha-remote.authn").service("authnService",["localStorageService","$q","$http","$log",a])}(),function(){angular.module("ha-remote.translations",["pascalprecht.translate"]);var a={APPNAME:"HA Remote",TITLE:"Home Remote",HEADLINE:"Home Remote",MENU_PANEL:"Buttons",MENU_ABOUT:"About this App",MENU_LOGIN:"Log in",MENU_LOGOUT:"Log out",ALL_CONTROLS:"All at once",POWER_ON_SUCCESS:"{{control_caption}} powered on",POWER_ON_FAILURE:"Failed to power on {{control_caption}}",POWER_OFF_SUCCESS:"{{control_caption}} powered off",POWER_OFF_FAILURE:"Failed to power off {{control_caption}}",POWER_ON_ALL_SUCCESS:"Everything powered on",POWER_ON_ALL_FAILURE:"Could not power everything on",POWER_OFF_ALL_SUCCESS:"Everything powered off",POWER_OFF_ALL_FAILURE:"Could not power everything off",CONFIG_LOAD_FAILED:"Could not load configuration",W_VERSION:"Version",W_MODULES:"Modules",W_PASSWORD:"Password",W_LOGIN:"Login",WRONG_PASSWORD:"Login failed, please try again"},b={APPNAME:"HA Remote",TITLE:"Hemma fjärr",HEADLINE:"Hemma fjärr",MENU_PANEL:"Knappar",MENU_ABOUT:"Om appen",MENU_LOGIN:"Logga in",MENU_LOGOUT:"Logga ut",ALL_CONTROLS:"Alla samtidigt",POWER_ON_SUCCESS:"Tände {{control_caption}}",POWER_ON_FAILURE:"Kunde inte tända {{control_caption}}",POWER_OFF_SUCCESS:"Släckte {{control_caption}}",POWER_OFF_FAILURE:"Kunde inte släcka {{control_caption}}",POWER_ON_ALL_SUCCESS:"Tände alla",POWER_ON_ALL_FAILURE:"Kunde inte tända alla",POWER_OFF_ALL_SUCCESS:"Släckte alla",POWER_OFF_ALL_FAILURE:"Kunde inte släcka alla",CONFIG_LOAD_FAILED:"Kunde inte hämta konfigurationen",W_VERSION:"Version",W_MODULES:"Moduler",W_PASSWORD:"Lösenord",W_LOGIN:"Logga in",WRONG_PASSWORD:"Misslyckad inloggning, försök igen."};angular.module("ha-remote.translations").config(["$translateProvider",function(c){c.translations("en",a).translations("sv",b).fallbackLanguage("en").preferredLanguage("sv"),c.useSanitizeValueStrategy("escape")}])}(),function(){angular.module("window-events",[]).directive("bnWindowBlur",function(a,b){function c(c,d,e){function f(a){c.$apply(e.bnWindowBlur),b.debug("Window blurred.")}function g(){h.off("blur",f)}var h=angular.element(a).on("blur",f);c.$on("$destroy",g)}return{link:c,restrict:"A"}}).directive("bnWindowFocus",function(a,b){function c(c,d,e){function f(){h.off("focus",g)}function g(a){c.$apply(e.bnWindowFocus),b.debug("Window focused.")}var h=angular.element(a).on("focus",g);c.$on("$destroy",f)}return{link:c,restrict:"A"}})}();var request=require("request"),logger=require("./utils/logger"),haURL=process.env.HA_URL||"http://localhost:8123",haPassword=process.env.HA_PASSWORD||"";module.exports={callService:callService,getDeviceState:getDeviceState,url:haURL,password:haPassword};var express=require("express"),fs=require("fs"),logger=require("../utils/logger"),router=express.Router();router.route("/").get(function(a,b){var c={copyrightYear:2016,copyrightHolders:"Jonas Andreasson",version:readPackageInfo("package.json").version,modules:[]};c.modules=c.modules.concat(readDepencyInfos(".")),b.json(c)}),module.exports=router;var logger=require("../utils/logger"),express=require("express"),Hashes=require("jshashes"),password=process.env.PASSWORD||"",tokenSalt=process.env.TOKEN_SALT;module.exports.hasPassword=function(){return!!password},module.exports.hasTokenSalt=function(){return tokenSalt?!0:(logger.error("Token salt not found in the environment, please set TOKEN_SALT. Exiting process."),void process.exit(1))},module.exports.router=express.Router(),module.exports.router.route("/authn").post(function(a,b){return a.body.password!=password?(logger.info("Refused token due to invalid password."),b.status(401).json({error:"Invalid password"})):(logger.info("Password valid, issuing token based on hostname: %s",a.hostname),void b.json({token:computeToken(a.body.password,a.hostname,tokenSalt)}))}),module.exports.authnFilter=function(a,b,c){return a.path.match("/api.*")&&"/api/authn"!=a.path&&(logger.debug("Authorizing"),void 0==a.headers.authorization||a.headers.authorization!="Bearer: ".concat(computeToken(password,a.hostname,tokenSalt)))?(void 0==a.headers.authorization?logger.info("Refused access due to missing token"):logger.info("Refused access due to invalid token"),b.status(401).send()):void c()};var logger=require("../utils/logger"),config=require("../utils/config"),express=require("express"),router=express.Router();router.route("/config").get(function(a,b){b.json(config.clientConfig())}),module.exports=router;var express=require("express"),request=require("request"),logger=require("../utils/logger"),config=require("../utils/config"),ha=require("../ha-api"),router=express.Router();router.route("/controls/:id/poweron").post(function(a,b){var c=config.controlDescription(Number(a.params.id));ha.callService(c.service.domain,c.service.onService,{entity_id:c.device_id},function(a,d){return a?(logger.error("Failed to call poweron service for device: %s",c.device_id),b.status(a).json(d)):void b.json(d)})}),router.route("/controls/:id/poweroff").post(function(a,b){var c=config.controlDescription(Number(a.params.id));ha.callService(c.service.domain,c.service.offService,{entity_id:c.device_id},function(a,d){return a?(logger.error("Failed to call poweroff service for device: %s",c.device_id),b.status(a).json(d)):void b.json(d)})}),router.route("/controls/:id").get(function(a,b){var c=config.controlDescription(Number(a.params.id));ha.getDeviceState(c.device_id,function(a,d){return a?(logger.error("Failed to call get state service for device: %s",c.device_id),b.status(a).json(d)):void b.json({state:d.state})})}),module.exports=router;var logger=require("./utils/logger"),config=require("./utils/config"),ha=require("./ha-api"),authn=require("./routers/authn"),port=process.env.PORT||8080;logger.info("============================================================"),logger.info("Runtime configuration"),logger.info("LogLevel: %s",logger.logLevel),logger.info("NODE_ENV: %s",process.env.NODE_ENV),logger.info("HTTP(S) port: %s",port),logger.info("Control configuration file: %s",config.configFileName),logger.info("HA Server: %s",ha.url),logger.info("HA Password: %s",ha.password),logger.info("Password: %s",authn.hasPassword()?"Is set":"Is NOT set"),logger.info("Token salt: %s",authn.hasTokenSalt()?"Is set":"Is NOT set"),logger.info("============================================================");var express=require("express"),app=express(),bodyParser=require("body-parser"),fs=require("fs"),https=require("https");app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json()),app.use(require("./utils/request-logger")),app.use(express["static"]("./src/client")),app.use("/node_modules",express["static"]("./node_modules")),app.use(authn.authnFilter);var router=express.Router();app.use("/api",require("./routers/about")),app.use("/api",authn.router),app.use("/api",require("./routers/config")),app.use("/api",require("./routers/controls"));var server=https.createServer({key:fs.readFileSync("./src/ssl/key.pem"),cert:fs.readFileSync("./src/ssl/cert.pem")},app).listen(port);logger.info("Web Server listening over SSL on "+port);var shutdown=function(){logger.info("Shuttting down API server"),server.close(function(){logger.info("API Server closed sucessfully"),logger.info("Shutdown completed, exiting"),process.exit(0)}),setTimeout(function(){logger.error("Could not close connections in time, forcefully shutting down"),process.exit()},1e4)};process.on("SIGTERM",function(){logger.info("Got signal SIGTERM, shutting down"),shutdown()}),process.on("SIGINT",function(){logger.info("Got signal SIGINT, shutting down"),shutdown()});var fs=require("fs"),jsmin=require("jsmin"),logger=require("./logger");module.exports={clientConfig:function(){var a=[];return getConfigData().controls.forEach(function(b){a.push({id:a.length,caption:b.caption})}),a},controlDescription:function(a){return getConfigData().controls[a]},configFileName:process.env.CONFIGFILE||"./src/configuration.json"};var configData,logLevel=process.env.LOGLEVEL||"info",dateFormat=require("dateformat"),winston=require("winston");winston.emitErrs=!0;var logger=new winston.Logger({transports:[new winston.transports.Console({level:logLevel,handleExceptions:!0,json:!1,colorize:!0,timestamp:function(){return dateFormat(Date.now(),"isoDateTime")},formatter:function(a){return a.timestamp()+" "+a.level.toUpperCase()+" "+(void 0!==a.message?a.message:"")+(a.meta&&Object.keys(a.meta).length?"\n	"+JSON.stringify(a.meta):"")}})],exitOnError:!1});module.exports=logger,module.exports.stream={write:function(a,b){logger.info(a)}},module.exports.logLevel=logLevel;var logger=require("./logger");module.exports=function(a,b,c){c(),logger.verbose("HTTP-ACCESS: %s %s : %s [%s]",a.method,a.path,b.statusCode,a.headers["user-agent"])};